name: Release

on:
  release:
    types: [published]

jobs:
  buildrelease:
    name: "Build Staging Release"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
  
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Create the release zip
      run: |
        octo pack
        --outFolder /home/runner/work/Application
        --basePath /home/runner/work/Application
        --id PowerBIApplication
        --version ${{ steps.get_version.outputs.VERSION }}
        --format zip
        --verbose
        --logLevel=verbose

    - name: Push Package to Octopus
      run: |
        octo push
        --server ${{ secrets.OCTOPUS_URL }}
        --apiKey ${{ secrets.OCTOPUS_APIKEY }}
        --package /home/runner/work/Application//PowerBIApplication.${{ steps.get_version.outputs.VERSION }}.zip
        --overwrite-mode IgnoreIfExists

    #- name: Get Release
    #  if: ${{ github.event.release.prerelease == false }} 
    #  id: getrelease
    #  uses: octokit/request-action@v2.0.17
    #  with:
    #      route: GET /repos/TransactionProcessing/CallbackHandler/releases/tags/${{ steps.get_version.outputs.VERSION }}
    #  env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #- name: Build Release Notes
    #  if: ${{ github.event.release.prerelease == false }} 
    #  id: buildreleasenotes
    #  uses: gr2m/get-json-paths-action@v1.x
    #  with:
    #      json: ${{ steps.getrelease.outputs.data }}
    #      releasenote: "body"

    #- name: Create & Deploy Release in Octopus
    #  if: ${{ github.event.release.prerelease == false }} 
    #  run: |
    #    octo  create-release
    #    --server ${{ secrets.OCTOPUS_URL }}
    #    --apiKey ${{ secrets.OCTOPUS_APIKEY }}
    #    --project "PowerBIReporting"
    #    --version ${{ steps.get_version.outputs.VERSION }}
    #    --channel Default
    #    --deployTo Staging
    #    --waitfordeployment
    #    --deploymenttimeout 00:05:00
    #    --releasenotes "${{ steps.buildreleasenotes.outputs.releasenote }}" 
                
    
    

      

    
